#ifndef LDL_OpenGL_OpenGL1_3_hpp
#define LDL_OpenGL_OpenGL1_3_hpp

#include <LDL/OpenGL/OpenGL1_2.hpp>

typedef void (OPENGL_API_CALL PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (OPENGL_API_CALL PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void (OPENGL_API_CALL PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void* data);
typedef void (OPENGL_API_CALL PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
typedef void (OPENGL_API_CALL PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void* data);
typedef void (OPENGL_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void* data);
typedef void (OPENGL_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
typedef void (OPENGL_API_CALL PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void* data);
typedef void (OPENGL_API_CALL PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void* img);
typedef void (OPENGL_API_CALL PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint* v);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (OPENGL_API_CALL PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat* m);
typedef void (OPENGL_API_CALL PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble* m);
typedef void (OPENGL_API_CALL PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat* m);
typedef void (OPENGL_API_CALL PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble* m);

OPENGL_API_ENTRY PFNGLACTIVETEXTUREPROC* glActiveTexture;
OPENGL_API_ENTRY PFNGLSAMPLECOVERAGEPROC* glSampleCoverage;
OPENGL_API_ENTRY PFNGLCOMPRESSEDTEXIMAGE3DPROC* glCompressedTexImage3D;
OPENGL_API_ENTRY PFNGLCOMPRESSEDTEXIMAGE2DPROC* glCompressedTexImage2D;
OPENGL_API_ENTRY PFNGLCOMPRESSEDTEXIMAGE1DPROC* glCompressedTexImage1D;
OPENGL_API_ENTRY PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC* glCompressedTexSubImage3D;
OPENGL_API_ENTRY PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC* glCompressedTexSubImage2D;
OPENGL_API_ENTRY PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC* glCompressedTexSubImage1D;
OPENGL_API_ENTRY PFNGLGETCOMPRESSEDTEXIMAGEPROC* glGetCompressedTexImage;
OPENGL_API_ENTRY PFNGLCLIENTACTIVETEXTUREPROC* glClientActiveTexture;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1DPROC* glMultiTexCoord1d;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1DVPROC* glMultiTexCoord1dv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1FPROC* glMultiTexCoord1f;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1FVPROC* glMultiTexCoord1fv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1IPROC* glMultiTexCoord1i;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1IVPROC* glMultiTexCoord1iv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1SPROC* glMultiTexCoord1s;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD1SVPROC* glMultiTexCoord1sv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2DPROC* glMultiTexCoord2d;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2DVPROC* glMultiTexCoord2dv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2FPROC* glMultiTexCoord2f;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2FVPROC* glMultiTexCoord2fv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2IPROC* glMultiTexCoord2i;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2IVPROC* glMultiTexCoord2iv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2SPROC* glMultiTexCoord2s;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD2SVPROC* glMultiTexCoord2sv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3DPROC* glMultiTexCoord3d;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3DVPROC* glMultiTexCoord3dv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3FPROC* glMultiTexCoord3f;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3FVPROC* glMultiTexCoord3fv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3IPROC* glMultiTexCoord3i;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3IVPROC* glMultiTexCoord3iv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3SPROC* glMultiTexCoord3s;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD3SVPROC* glMultiTexCoord3sv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4DPROC* glMultiTexCoord4d;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4DVPROC* glMultiTexCoord4dv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4FPROC* glMultiTexCoord4f;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4FVPROC* glMultiTexCoord4fv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4IPROC* glMultiTexCoord4i;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4IVPROC* glMultiTexCoord4iv;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4SPROC* glMultiTexCoord4s;
OPENGL_API_ENTRY PFNGLMULTITEXCOORD4SVPROC* glMultiTexCoord4sv;
OPENGL_API_ENTRY PFNGLLOADTRANSPOSEMATRIXFPROC* glLoadTransposeMatrixf;
OPENGL_API_ENTRY PFNGLLOADTRANSPOSEMATRIXDPROC* glLoadTransposeMatrixd;
OPENGL_API_ENTRY PFNGLMULTTRANSPOSEMATRIXFPROC* glMultTransposeMatrixf;
OPENGL_API_ENTRY PFNGLMULTTRANSPOSEMATRIXDPROC* glMultTransposeMatrixd;

#endif     