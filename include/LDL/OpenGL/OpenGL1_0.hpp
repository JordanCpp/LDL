#ifndef LDL_OpenGL_OpenGL1_0_hpp
#define LDL_OpenGL_OpenGL1_0_hpp

#include <LDL/OpenGL/OpenGLTypes.hpp>
#include <LDL/OpenGL/OpenGL_Constants.hpp>

typedef void (OPENGL_API_CALL PFNGLCULLFACEPROC)(GLenum mode);
typedef void (OPENGL_API_CALL PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (OPENGL_API_CALL PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void (OPENGL_API_CALL PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (OPENGL_API_CALL PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (OPENGL_API_CALL PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (OPENGL_API_CALL PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (OPENGL_API_CALL PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (OPENGL_API_CALL PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (OPENGL_API_CALL PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (OPENGL_API_CALL PFNGLCLEARPROC)(GLbitfield mask);
typedef void (OPENGL_API_CALL PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (OPENGL_API_CALL PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (OPENGL_API_CALL PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (OPENGL_API_CALL PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (OPENGL_API_CALL PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (OPENGL_API_CALL PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (OPENGL_API_CALL PFNGLDISABLEPROC)(GLenum cap);
typedef void (OPENGL_API_CALL PFNGLENABLEPROC)(GLenum cap);
typedef void (OPENGL_API_CALL PFNGLFINISHPROC)(void);
typedef void (OPENGL_API_CALL PFNGLFLUSHPROC)(void);
typedef void (OPENGL_API_CALL PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (OPENGL_API_CALL PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (OPENGL_API_CALL PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (OPENGL_API_CALL PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (OPENGL_API_CALL PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (OPENGL_API_CALL PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLREADBUFFERPROC)(GLenum src);
typedef void (OPENGL_API_CALL PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
typedef void (OPENGL_API_CALL PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean* data);
typedef void (OPENGL_API_CALL PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble* data);
typedef GLenum(OPENGL_API_CALL PFNGLGETERRORPROC)(void);
typedef void (OPENGL_API_CALL PFNGLGETFLOATVPROC)(GLenum pname, GLfloat* data);
typedef void (OPENGL_API_CALL PFNGLGETINTEGERVPROC)(GLenum pname, GLint* data);
typedef const GLubyte* (OPENGL_API_CALL PFNGLGETSTRINGPROC)(GLenum name);
typedef void (OPENGL_API_CALL PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
typedef void (OPENGL_API_CALL PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint* params);
typedef GLboolean(OPENGL_API_CALL PFNGLISENABLEDPROC)(GLenum cap);
typedef void (OPENGL_API_CALL PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void (OPENGL_API_CALL PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (OPENGL_API_CALL PFNGLNEWLISTPROC)(GLuint list, GLenum mode);
typedef void (OPENGL_API_CALL PFNGLENDLISTPROC)(void);
typedef void (OPENGL_API_CALL PFNGLCALLLISTPROC)(GLuint list);
typedef void (OPENGL_API_CALL PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void* lists);
typedef void (OPENGL_API_CALL PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);
typedef GLuint(OPENGL_API_CALL PFNGLGENLISTSPROC)(GLsizei range);
typedef void (OPENGL_API_CALL PFNGLLISTBASEPROC)(GLuint base);
typedef void (OPENGL_API_CALL PFNGLBEGINPROC)(GLenum mode);
typedef void (OPENGL_API_CALL PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
typedef void (OPENGL_API_CALL PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3BVPROC)(const GLbyte* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3UBVPROC)(const GLubyte* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3UIVPROC)(const GLuint* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (OPENGL_API_CALL PFNGLCOLOR3USVPROC)(const GLushort* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4BVPROC)(const GLbyte* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4UBVPROC)(const GLubyte* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4UIVPROC)(const GLuint* v);
typedef void (OPENGL_API_CALL PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (OPENGL_API_CALL PFNGLCOLOR4USVPROC)(const GLushort* v);
typedef void (OPENGL_API_CALL PFNGLEDGEFLAGPROC)(GLboolean flag);
typedef void (OPENGL_API_CALL PFNGLEDGEFLAGVPROC)(const GLboolean* flag);
typedef void (OPENGL_API_CALL PFNGLENDPROC)(void);
typedef void (OPENGL_API_CALL PFNGLINDEXDPROC)(GLdouble c);
typedef void (OPENGL_API_CALL PFNGLINDEXDVPROC)(const GLdouble* c);
typedef void (OPENGL_API_CALL PFNGLINDEXFPROC)(GLfloat c);
typedef void (OPENGL_API_CALL PFNGLINDEXFVPROC)(const GLfloat* c);
typedef void (OPENGL_API_CALL PFNGLINDEXIPROC)(GLint c);
typedef void (OPENGL_API_CALL PFNGLINDEXIVPROC)(const GLint* c);
typedef void (OPENGL_API_CALL PFNGLINDEXSPROC)(GLshort c);
typedef void (OPENGL_API_CALL PFNGLINDEXSVPROC)(const GLshort* c);
typedef void (OPENGL_API_CALL PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (OPENGL_API_CALL PFNGLNORMAL3BVPROC)(const GLbyte* v);
typedef void (OPENGL_API_CALL PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (OPENGL_API_CALL PFNGLNORMAL3DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (OPENGL_API_CALL PFNGLNORMAL3FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);
typedef void (OPENGL_API_CALL PFNGLNORMAL3IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);
typedef void (OPENGL_API_CALL PFNGLNORMAL3SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2IPROC)(GLint x, GLint y);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS2SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS3SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (OPENGL_API_CALL PFNGLRASTERPOS4SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (OPENGL_API_CALL PFNGLRECTDVPROC)(const GLdouble* v1, const GLdouble* v2);
typedef void (OPENGL_API_CALL PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (OPENGL_API_CALL PFNGLRECTFVPROC)(const GLfloat* v1, const GLfloat* v2);
typedef void (OPENGL_API_CALL PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (OPENGL_API_CALL PFNGLRECTIVPROC)(const GLint* v1, const GLint* v2);
typedef void (OPENGL_API_CALL PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (OPENGL_API_CALL PFNGLRECTSVPROC)(const GLshort* v1, const GLshort* v2);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1DPROC)(GLdouble s);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1FPROC)(GLfloat s);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1IPROC)(GLint s);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1SPROC)(GLshort s);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD1SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2IPROC)(GLint s, GLint t);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD2SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD3SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (OPENGL_API_CALL PFNGLTEXCOORD4SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);
typedef void (OPENGL_API_CALL PFNGLVERTEX2DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);
typedef void (OPENGL_API_CALL PFNGLVERTEX2FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX2IPROC)(GLint x, GLint y);
typedef void (OPENGL_API_CALL PFNGLVERTEX2IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX2SPROC)(GLshort x, GLshort y);
typedef void (OPENGL_API_CALL PFNGLVERTEX2SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (OPENGL_API_CALL PFNGLVERTEX3DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (OPENGL_API_CALL PFNGLVERTEX3FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);
typedef void (OPENGL_API_CALL PFNGLVERTEX3IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (OPENGL_API_CALL PFNGLVERTEX3SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (OPENGL_API_CALL PFNGLVERTEX4DVPROC)(const GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (OPENGL_API_CALL PFNGLVERTEX4FVPROC)(const GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (OPENGL_API_CALL PFNGLVERTEX4IVPROC)(const GLint* v);
typedef void (OPENGL_API_CALL PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (OPENGL_API_CALL PFNGLVERTEX4SVPROC)(const GLshort* v);
typedef void (OPENGL_API_CALL PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble* equation);
typedef void (OPENGL_API_CALL PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);
typedef void (OPENGL_API_CALL PFNGLFOGFPROC)(GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLFOGFVPROC)(GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLFOGIPROC)(GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLFOGIVPROC)(GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);
typedef void (OPENGL_API_CALL PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLPOLYGONSTIPPLEPROC)(const GLubyte* mask);
typedef void (OPENGL_API_CALL PFNGLSHADEMODELPROC)(GLenum mode);
typedef void (OPENGL_API_CALL PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);
typedef void (OPENGL_API_CALL PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble* params);
typedef void (OPENGL_API_CALL PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint* params);
typedef void (OPENGL_API_CALL PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat* buffer);
typedef void (OPENGL_API_CALL PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint* buffer);
typedef GLint(OPENGL_API_CALL PFNGLRENDERMODEPROC)(GLenum mode);
typedef void (OPENGL_API_CALL PFNGLINITNAMESPROC)(void);
typedef void (OPENGL_API_CALL PFNGLLOADNAMEPROC)(GLuint name);
typedef void (OPENGL_API_CALL PFNGLPASSTHROUGHPROC)(GLfloat token);
typedef void (OPENGL_API_CALL PFNGLPOPNAMEPROC)(void);
typedef void (OPENGL_API_CALL PFNGLPUSHNAMEPROC)(GLuint name);
typedef void (OPENGL_API_CALL PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (OPENGL_API_CALL PFNGLCLEARINDEXPROC)(GLfloat c);
typedef void (OPENGL_API_CALL PFNGLINDEXMASKPROC)(GLuint mask);
typedef void (OPENGL_API_CALL PFNGLACCUMPROC)(GLenum op, GLfloat value);
typedef void (OPENGL_API_CALL PFNGLPOPATTRIBPROC)(void);
typedef void (OPENGL_API_CALL PFNGLPUSHATTRIBPROC)(GLbitfield mask);
typedef void (OPENGL_API_CALL PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
typedef void (OPENGL_API_CALL PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
typedef void (OPENGL_API_CALL PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
typedef void (OPENGL_API_CALL PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
typedef void (OPENGL_API_CALL PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);
typedef void (OPENGL_API_CALL PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);
typedef void (OPENGL_API_CALL PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (OPENGL_API_CALL PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD1DPROC)(GLdouble u);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD1DVPROC)(const GLdouble* u);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD1FPROC)(GLfloat u);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD1FVPROC)(const GLfloat* u);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD2DVPROC)(const GLdouble* u);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);
typedef void (OPENGL_API_CALL PFNGLEVALCOORD2FVPROC)(const GLfloat* u);
typedef void (OPENGL_API_CALL PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);
typedef void (OPENGL_API_CALL PFNGLEVALPOINT1PROC)(GLint i);
typedef void (OPENGL_API_CALL PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (OPENGL_API_CALL PFNGLEVALPOINT2PROC)(GLint i, GLint j);
typedef void (OPENGL_API_CALL PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);
typedef void (OPENGL_API_CALL PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);
typedef void (OPENGL_API_CALL PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);
typedef void (OPENGL_API_CALL PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);
typedef void (OPENGL_API_CALL PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat* values);
typedef void (OPENGL_API_CALL PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint* values);
typedef void (OPENGL_API_CALL PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort* values);
typedef void (OPENGL_API_CALL PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (OPENGL_API_CALL PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
typedef void (OPENGL_API_CALL PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble* equation);
typedef void (OPENGL_API_CALL PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint* params);
typedef void (OPENGL_API_CALL PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble* v);
typedef void (OPENGL_API_CALL PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat* v);
typedef void (OPENGL_API_CALL PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint* v);
typedef void (OPENGL_API_CALL PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint* params);
typedef void (OPENGL_API_CALL PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat* values);
typedef void (OPENGL_API_CALL PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint* values);
typedef void (OPENGL_API_CALL PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort* values);
typedef void (OPENGL_API_CALL PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte* mask);
typedef void (OPENGL_API_CALL PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat* params);
typedef void (OPENGL_API_CALL PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint* params);
typedef GLboolean(OPENGL_API_CALL PFNGLISLISTPROC)(GLuint list);
typedef void (OPENGL_API_CALL PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (OPENGL_API_CALL PFNGLLOADIDENTITYPROC)(void);
typedef void (OPENGL_API_CALL PFNGLLOADMATRIXFPROC)(const GLfloat* m);
typedef void (OPENGL_API_CALL PFNGLLOADMATRIXDPROC)(const GLdouble* m);
typedef void (OPENGL_API_CALL PFNGLMATRIXMODEPROC)(GLenum mode);
typedef void (OPENGL_API_CALL PFNGLMULTMATRIXFPROC)(const GLfloat* m);
typedef void (OPENGL_API_CALL PFNGLMULTMATRIXDPROC)(const GLdouble* m);
typedef void (OPENGL_API_CALL PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (OPENGL_API_CALL PFNGLPOPMATRIXPROC)(void);
typedef void (OPENGL_API_CALL PFNGLPUSHMATRIXPROC)(void);
typedef void (OPENGL_API_CALL PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (OPENGL_API_CALL PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (OPENGL_API_CALL PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (OPENGL_API_CALL PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (OPENGL_API_CALL PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (OPENGL_API_CALL PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);

OPENGL_API_ENTRY PFNGLCULLFACEPROC* glCullFace;
OPENGL_API_ENTRY PFNGLFRONTFACEPROC* glFrontFace;
OPENGL_API_ENTRY PFNGLHINTPROC* glHint;
OPENGL_API_ENTRY PFNGLLINEWIDTHPROC* glLineWidth;
OPENGL_API_ENTRY PFNGLPOINTSIZEPROC* glPointSize;
OPENGL_API_ENTRY PFNGLPOLYGONMODEPROC* glPolygonMode;
OPENGL_API_ENTRY PFNGLSCISSORPROC* glScissor;
OPENGL_API_ENTRY PFNGLTEXPARAMETERFPROC* glTexParameterf;
OPENGL_API_ENTRY PFNGLTEXPARAMETERFVPROC* glTexParameterfv;
OPENGL_API_ENTRY PFNGLTEXPARAMETERIPROC* glTexParameteri;
OPENGL_API_ENTRY PFNGLTEXPARAMETERIVPROC* glTexParameteriv;
OPENGL_API_ENTRY PFNGLTEXIMAGE1DPROC* glTexImage1D;
OPENGL_API_ENTRY PFNGLTEXIMAGE2DPROC* glTexImage2D;
OPENGL_API_ENTRY PFNGLDRAWBUFFERPROC* glDrawBuffer;
OPENGL_API_ENTRY PFNGLCLEARPROC* glClear;
OPENGL_API_ENTRY PFNGLCLEARCOLORPROC* glClearColor;
OPENGL_API_ENTRY PFNGLCLEARSTENCILPROC* glClearStencil;
OPENGL_API_ENTRY PFNGLCLEARDEPTHPROC* glClearDepth;
OPENGL_API_ENTRY PFNGLSTENCILMASKPROC* glStencilMask;
OPENGL_API_ENTRY PFNGLCOLORMASKPROC* glColorMask;
OPENGL_API_ENTRY PFNGLDEPTHMASKPROC* glDepthMask;
OPENGL_API_ENTRY PFNGLDISABLEPROC* glDisable;
OPENGL_API_ENTRY PFNGLENABLEPROC* glEnable;
OPENGL_API_ENTRY PFNGLFINISHPROC* glFinish;
OPENGL_API_ENTRY PFNGLFLUSHPROC* glFlush;
OPENGL_API_ENTRY PFNGLBLENDFUNCPROC* glBlendFunc;
OPENGL_API_ENTRY PFNGLLOGICOPPROC* glLogicOp;
OPENGL_API_ENTRY PFNGLSTENCILFUNCPROC* glStencilFunc;
OPENGL_API_ENTRY PFNGLSTENCILOPPROC* glStencilOp;
OPENGL_API_ENTRY PFNGLDEPTHFUNCPROC* glDepthFunc;
OPENGL_API_ENTRY PFNGLPIXELSTOREFPROC* glPixelStoref;
OPENGL_API_ENTRY PFNGLPIXELSTOREIPROC* glPixelStorei;
OPENGL_API_ENTRY PFNGLREADBUFFERPROC* glReadBuffer;
OPENGL_API_ENTRY PFNGLREADPIXELSPROC* glReadPixels;
OPENGL_API_ENTRY PFNGLGETBOOLEANVPROC* glGetBooleanv;
OPENGL_API_ENTRY PFNGLGETDOUBLEVPROC* glGetDoublev;
OPENGL_API_ENTRY PFNGLGETERRORPROC* glGetError;
OPENGL_API_ENTRY PFNGLGETFLOATVPROC* glGetFloatv;
OPENGL_API_ENTRY PFNGLGETINTEGERVPROC* glGetIntegerv;
OPENGL_API_ENTRY PFNGLGETSTRINGPROC* glGetString;
OPENGL_API_ENTRY PFNGLGETTEXIMAGEPROC* glGetTexImage;
OPENGL_API_ENTRY PFNGLGETTEXPARAMETERFVPROC* glGetTexParameterfv;
OPENGL_API_ENTRY PFNGLGETTEXPARAMETERIVPROC* glGetTexParameteriv;
OPENGL_API_ENTRY PFNGLGETTEXLEVELPARAMETERFVPROC* glGetTexLevelParameterfv;
OPENGL_API_ENTRY PFNGLGETTEXLEVELPARAMETERIVPROC* glGetTexLevelParameteriv;
OPENGL_API_ENTRY PFNGLISENABLEDPROC* glIsEnabled;
OPENGL_API_ENTRY PFNGLDEPTHRANGEPROC* glDepthRange;
OPENGL_API_ENTRY PFNGLVIEWPORTPROC* glViewport;
OPENGL_API_ENTRY PFNGLNEWLISTPROC* glNewList;
OPENGL_API_ENTRY PFNGLENDLISTPROC* glEndList;
OPENGL_API_ENTRY PFNGLCALLLISTPROC* glCallList;
OPENGL_API_ENTRY PFNGLCALLLISTSPROC* glCallLists;
OPENGL_API_ENTRY PFNGLDELETELISTSPROC* glDeleteLists;
OPENGL_API_ENTRY PFNGLGENLISTSPROC* glGenLists;
OPENGL_API_ENTRY PFNGLLISTBASEPROC* glListBase;
OPENGL_API_ENTRY PFNGLBEGINPROC* glBegin;
OPENGL_API_ENTRY PFNGLBITMAPPROC* glBitmap;
OPENGL_API_ENTRY PFNGLCOLOR3BPROC* glColor3b;
OPENGL_API_ENTRY PFNGLCOLOR3BVPROC* glColor3bv;
OPENGL_API_ENTRY PFNGLCOLOR3DPROC* glColor3d;
OPENGL_API_ENTRY PFNGLCOLOR3DVPROC* glColor3dv;
OPENGL_API_ENTRY PFNGLCOLOR3FPROC* glColor3f;
OPENGL_API_ENTRY PFNGLCOLOR3FVPROC* glColor3fv;
OPENGL_API_ENTRY PFNGLCOLOR3IPROC* glColor3i;
OPENGL_API_ENTRY PFNGLCOLOR3IVPROC* glColor3iv;
OPENGL_API_ENTRY PFNGLCOLOR3SPROC* glColor3s;
OPENGL_API_ENTRY PFNGLCOLOR3SVPROC* glColor3sv;
OPENGL_API_ENTRY PFNGLCOLOR3UBPROC* glColor3ub;
OPENGL_API_ENTRY PFNGLCOLOR3UBVPROC* glColor3ubv;
OPENGL_API_ENTRY PFNGLCOLOR3UIPROC* glColor3ui;
OPENGL_API_ENTRY PFNGLCOLOR3UIVPROC* glColor3uiv;
OPENGL_API_ENTRY PFNGLCOLOR3USPROC* glColor3us;
OPENGL_API_ENTRY PFNGLCOLOR3USVPROC* glColor3usv;
OPENGL_API_ENTRY PFNGLCOLOR4BPROC* glColor4b;
OPENGL_API_ENTRY PFNGLCOLOR4BVPROC* glColor4bv;
OPENGL_API_ENTRY PFNGLCOLOR4DPROC* glColor4d;
OPENGL_API_ENTRY PFNGLCOLOR4DVPROC* glColor4dv;
OPENGL_API_ENTRY PFNGLCOLOR4FPROC* glColor4f;
OPENGL_API_ENTRY PFNGLCOLOR4FVPROC* glColor4fv;
OPENGL_API_ENTRY PFNGLCOLOR4IPROC* glColor4i;
OPENGL_API_ENTRY PFNGLCOLOR4IVPROC* glColor4iv;
OPENGL_API_ENTRY PFNGLCOLOR4SPROC* glColor4s;
OPENGL_API_ENTRY PFNGLCOLOR4SVPROC* glColor4sv;
OPENGL_API_ENTRY PFNGLCOLOR4UBPROC* glColor4ub;
OPENGL_API_ENTRY PFNGLCOLOR4UBVPROC* glColor4ubv;
OPENGL_API_ENTRY PFNGLCOLOR4UIPROC* glColor4ui;
OPENGL_API_ENTRY PFNGLCOLOR4UIVPROC* glColor4uiv;
OPENGL_API_ENTRY PFNGLCOLOR4USPROC* glColor4us;
OPENGL_API_ENTRY PFNGLCOLOR4USVPROC* glColor4usv;
OPENGL_API_ENTRY PFNGLEDGEFLAGPROC* glEdgeFlag;
OPENGL_API_ENTRY PFNGLEDGEFLAGVPROC* glEdgeFlagv;
OPENGL_API_ENTRY PFNGLENDPROC* glEnd;
OPENGL_API_ENTRY PFNGLINDEXDPROC* glIndexd;
OPENGL_API_ENTRY PFNGLINDEXDVPROC* glIndexdv;
OPENGL_API_ENTRY PFNGLINDEXFPROC* glIndexf;
OPENGL_API_ENTRY PFNGLINDEXFVPROC* glIndexfv;
OPENGL_API_ENTRY PFNGLINDEXIPROC* glIndexi;
OPENGL_API_ENTRY PFNGLINDEXIVPROC* glIndexiv;
OPENGL_API_ENTRY PFNGLINDEXSPROC* glIndexs;
OPENGL_API_ENTRY PFNGLINDEXSVPROC* glIndexsv;
OPENGL_API_ENTRY PFNGLNORMAL3BPROC* glNormal3b;
OPENGL_API_ENTRY PFNGLNORMAL3BVPROC* glNormal3bv;
OPENGL_API_ENTRY PFNGLNORMAL3DPROC* glNormal3d;
OPENGL_API_ENTRY PFNGLNORMAL3DVPROC* glNormal3dv;
OPENGL_API_ENTRY PFNGLNORMAL3FPROC* glNormal3f;
OPENGL_API_ENTRY PFNGLNORMAL3FVPROC* glNormal3fv;
OPENGL_API_ENTRY PFNGLNORMAL3IPROC* glNormal3i;
OPENGL_API_ENTRY PFNGLNORMAL3IVPROC* glNormal3iv;
OPENGL_API_ENTRY PFNGLNORMAL3SPROC* glNormal3s;
OPENGL_API_ENTRY PFNGLNORMAL3SVPROC* glNormal3sv;
OPENGL_API_ENTRY PFNGLRASTERPOS2DPROC* glRasterPos2d;
OPENGL_API_ENTRY PFNGLRASTERPOS2DVPROC* glRasterPos2dv;
OPENGL_API_ENTRY PFNGLRASTERPOS2FPROC* glRasterPos2f;
OPENGL_API_ENTRY PFNGLRASTERPOS2FVPROC* glRasterPos2fv;
OPENGL_API_ENTRY PFNGLRASTERPOS2IPROC* glRasterPos2i;
OPENGL_API_ENTRY PFNGLRASTERPOS2IVPROC* glRasterPos2iv;
OPENGL_API_ENTRY PFNGLRASTERPOS2SPROC* glRasterPos2s;
OPENGL_API_ENTRY PFNGLRASTERPOS2SVPROC* glRasterPos2sv;
OPENGL_API_ENTRY PFNGLRASTERPOS3DPROC* glRasterPos3d;
OPENGL_API_ENTRY PFNGLRASTERPOS3DVPROC* glRasterPos3dv;
OPENGL_API_ENTRY PFNGLRASTERPOS3FPROC* glRasterPos3f;
OPENGL_API_ENTRY PFNGLRASTERPOS3FVPROC* glRasterPos3fv;
OPENGL_API_ENTRY PFNGLRASTERPOS3IPROC* glRasterPos3i;
OPENGL_API_ENTRY PFNGLRASTERPOS3IVPROC* glRasterPos3iv;
OPENGL_API_ENTRY PFNGLRASTERPOS3SPROC* glRasterPos3s;
OPENGL_API_ENTRY PFNGLRASTERPOS3SVPROC* glRasterPos3sv;
OPENGL_API_ENTRY PFNGLRASTERPOS4DPROC* glRasterPos4d;
OPENGL_API_ENTRY PFNGLRASTERPOS4DVPROC* glRasterPos4dv;
OPENGL_API_ENTRY PFNGLRASTERPOS4FPROC* glRasterPos4f;
OPENGL_API_ENTRY PFNGLRASTERPOS4FVPROC* glRasterPos4fv;
OPENGL_API_ENTRY PFNGLRASTERPOS4IPROC* glRasterPos4i;
OPENGL_API_ENTRY PFNGLRASTERPOS4IVPROC* glRasterPos4iv;
OPENGL_API_ENTRY PFNGLRASTERPOS4SPROC* glRasterPos4s;
OPENGL_API_ENTRY PFNGLRASTERPOS4SVPROC* glRasterPos4sv;
OPENGL_API_ENTRY PFNGLRECTDPROC* glRectd;
OPENGL_API_ENTRY PFNGLRECTDVPROC* glRectdv;
OPENGL_API_ENTRY PFNGLRECTFPROC* glRectf;
OPENGL_API_ENTRY PFNGLRECTFVPROC* glRectfv;
OPENGL_API_ENTRY PFNGLRECTIPROC* glRecti;
OPENGL_API_ENTRY PFNGLRECTIVPROC* glRectiv;
OPENGL_API_ENTRY PFNGLRECTSPROC* glRects;
OPENGL_API_ENTRY PFNGLRECTSVPROC* glRectsv;
OPENGL_API_ENTRY PFNGLTEXCOORD1DPROC* glTexCoord1d;
OPENGL_API_ENTRY PFNGLTEXCOORD1DVPROC* glTexCoord1dv;
OPENGL_API_ENTRY PFNGLTEXCOORD1FPROC* glTexCoord1f;
OPENGL_API_ENTRY PFNGLTEXCOORD1FVPROC* glTexCoord1fv;
OPENGL_API_ENTRY PFNGLTEXCOORD1IPROC* glTexCoord1i;
OPENGL_API_ENTRY PFNGLTEXCOORD1IVPROC* glTexCoord1iv;
OPENGL_API_ENTRY PFNGLTEXCOORD1SPROC* glTexCoord1s;
OPENGL_API_ENTRY PFNGLTEXCOORD1SVPROC* glTexCoord1sv;
OPENGL_API_ENTRY PFNGLTEXCOORD2DPROC* glTexCoord2d;
OPENGL_API_ENTRY PFNGLTEXCOORD2DVPROC* glTexCoord2dv;
OPENGL_API_ENTRY PFNGLTEXCOORD2FPROC* glTexCoord2f;
OPENGL_API_ENTRY PFNGLTEXCOORD2FVPROC* glTexCoord2fv;
OPENGL_API_ENTRY PFNGLTEXCOORD2IPROC* glTexCoord2i;
OPENGL_API_ENTRY PFNGLTEXCOORD2IVPROC* glTexCoord2iv;
OPENGL_API_ENTRY PFNGLTEXCOORD2SPROC* glTexCoord2s;
OPENGL_API_ENTRY PFNGLTEXCOORD2SVPROC* glTexCoord2sv;
OPENGL_API_ENTRY PFNGLTEXCOORD3DPROC* glTexCoord3d;
OPENGL_API_ENTRY PFNGLTEXCOORD3DVPROC* glTexCoord3dv;
OPENGL_API_ENTRY PFNGLTEXCOORD3FPROC* glTexCoord3f;
OPENGL_API_ENTRY PFNGLTEXCOORD3FVPROC* glTexCoord3fv;
OPENGL_API_ENTRY PFNGLTEXCOORD3IPROC* glTexCoord3i;
OPENGL_API_ENTRY PFNGLTEXCOORD3IVPROC* glTexCoord3iv;
OPENGL_API_ENTRY PFNGLTEXCOORD3SPROC* glTexCoord3s;
OPENGL_API_ENTRY PFNGLTEXCOORD3SVPROC* glTexCoord3sv;
OPENGL_API_ENTRY PFNGLTEXCOORD4DPROC* glTexCoord4d;
OPENGL_API_ENTRY PFNGLTEXCOORD4DVPROC* glTexCoord4dv;
OPENGL_API_ENTRY PFNGLTEXCOORD4FPROC* glTexCoord4f;
OPENGL_API_ENTRY PFNGLTEXCOORD4FVPROC* glTexCoord4fv;
OPENGL_API_ENTRY PFNGLTEXCOORD4IPROC* glTexCoord4i;
OPENGL_API_ENTRY PFNGLTEXCOORD4IVPROC* glTexCoord4iv;
OPENGL_API_ENTRY PFNGLTEXCOORD4SPROC* glTexCoord4s;
OPENGL_API_ENTRY PFNGLTEXCOORD4SVPROC* glTexCoord4sv;
OPENGL_API_ENTRY PFNGLVERTEX2DPROC* glVertex2d;
OPENGL_API_ENTRY PFNGLVERTEX2DVPROC* glVertex2dv;
OPENGL_API_ENTRY PFNGLVERTEX2FPROC* glVertex2f;
OPENGL_API_ENTRY PFNGLVERTEX2FVPROC* glVertex2fv;
OPENGL_API_ENTRY PFNGLVERTEX2IPROC* glVertex2i;
OPENGL_API_ENTRY PFNGLVERTEX2IVPROC* glVertex2iv;
OPENGL_API_ENTRY PFNGLVERTEX2SPROC* glVertex2s;
OPENGL_API_ENTRY PFNGLVERTEX2SVPROC* glVertex2sv;
OPENGL_API_ENTRY PFNGLVERTEX3DPROC* glVertex3d;
OPENGL_API_ENTRY PFNGLVERTEX3DVPROC* glVertex3dv;
OPENGL_API_ENTRY PFNGLVERTEX3FPROC* glVertex3f;
OPENGL_API_ENTRY PFNGLVERTEX3FVPROC* glVertex3fv;
OPENGL_API_ENTRY PFNGLVERTEX3IPROC* glVertex3i;
OPENGL_API_ENTRY PFNGLVERTEX3IVPROC* glVertex3iv;
OPENGL_API_ENTRY PFNGLVERTEX3SPROC* glVertex3s;
OPENGL_API_ENTRY PFNGLVERTEX3SVPROC* glVertex3sv;
OPENGL_API_ENTRY PFNGLVERTEX4DPROC* glVertex4d;
OPENGL_API_ENTRY PFNGLVERTEX4DVPROC* glVertex4dv;
OPENGL_API_ENTRY PFNGLVERTEX4FPROC* glVertex4f;
OPENGL_API_ENTRY PFNGLVERTEX4FVPROC* glVertex4fv;
OPENGL_API_ENTRY PFNGLVERTEX4IPROC* glVertex4i;
OPENGL_API_ENTRY PFNGLVERTEX4IVPROC* glVertex4iv;
OPENGL_API_ENTRY PFNGLVERTEX4SPROC* glVertex4s;
OPENGL_API_ENTRY PFNGLVERTEX4SVPROC* glVertex4sv;
OPENGL_API_ENTRY PFNGLCLIPPLANEPROC* glClipPlane;
OPENGL_API_ENTRY PFNGLCOLORMATERIALPROC* glColorMaterial;
OPENGL_API_ENTRY PFNGLFOGFPROC* glFogf;
OPENGL_API_ENTRY PFNGLFOGFVPROC* glFogfv;
OPENGL_API_ENTRY PFNGLFOGIPROC* glFogi;
OPENGL_API_ENTRY PFNGLFOGIVPROC* glFogiv;
OPENGL_API_ENTRY PFNGLLIGHTFPROC* glLightf;
OPENGL_API_ENTRY PFNGLLIGHTFVPROC* glLightfv;
OPENGL_API_ENTRY PFNGLLIGHTIPROC* glLighti;
OPENGL_API_ENTRY PFNGLLIGHTIVPROC* glLightiv;
OPENGL_API_ENTRY PFNGLLIGHTMODELFPROC* glLightModelf;
OPENGL_API_ENTRY PFNGLLIGHTMODELFVPROC* glLightModelfv;
OPENGL_API_ENTRY PFNGLLIGHTMODELIPROC* glLightModeli;
OPENGL_API_ENTRY PFNGLLIGHTMODELIVPROC* glLightModeliv;
OPENGL_API_ENTRY PFNGLLINESTIPPLEPROC* glLineStipple;
OPENGL_API_ENTRY PFNGLMATERIALFPROC* glMaterialf;
OPENGL_API_ENTRY PFNGLMATERIALFVPROC* glMaterialfv;
OPENGL_API_ENTRY PFNGLMATERIALIPROC* glMateriali;
OPENGL_API_ENTRY PFNGLMATERIALIVPROC* glMaterialiv;
OPENGL_API_ENTRY PFNGLPOLYGONSTIPPLEPROC* glPolygonStipple;
OPENGL_API_ENTRY PFNGLSHADEMODELPROC* glShadeModel;
OPENGL_API_ENTRY PFNGLTEXENVFPROC* glTexEnvf;
OPENGL_API_ENTRY PFNGLTEXENVFVPROC* glTexEnvfv;
OPENGL_API_ENTRY PFNGLTEXENVIPROC* glTexEnvi;
OPENGL_API_ENTRY PFNGLTEXENVIVPROC* glTexEnviv;
OPENGL_API_ENTRY PFNGLTEXGENDPROC* glTexGend;
OPENGL_API_ENTRY PFNGLTEXGENDVPROC* glTexGendv;
OPENGL_API_ENTRY PFNGLTEXGENFPROC* glTexGenf;
OPENGL_API_ENTRY PFNGLTEXGENFVPROC* glTexGenfv;
OPENGL_API_ENTRY PFNGLTEXGENIPROC* glTexGeni;
OPENGL_API_ENTRY PFNGLTEXGENIVPROC* glTexGeniv;
OPENGL_API_ENTRY PFNGLFEEDBACKBUFFERPROC* glFeedbackBuffer;
OPENGL_API_ENTRY PFNGLSELECTBUFFERPROC* glSelectBuffer;
OPENGL_API_ENTRY PFNGLRENDERMODEPROC* glRenderMode;
OPENGL_API_ENTRY PFNGLINITNAMESPROC* glInitNames;
OPENGL_API_ENTRY PFNGLLOADNAMEPROC* glLoadName;
OPENGL_API_ENTRY PFNGLPASSTHROUGHPROC* glPassThrough;
OPENGL_API_ENTRY PFNGLPOPNAMEPROC* glPopName;
OPENGL_API_ENTRY PFNGLPUSHNAMEPROC* glPushName;
OPENGL_API_ENTRY PFNGLCLEARACCUMPROC* glClearAccum;
OPENGL_API_ENTRY PFNGLCLEARINDEXPROC* glClearIndex;
OPENGL_API_ENTRY PFNGLINDEXMASKPROC* glIndexMask;
OPENGL_API_ENTRY PFNGLACCUMPROC* glAccum;
OPENGL_API_ENTRY PFNGLPOPATTRIBPROC* glPopAttrib;
OPENGL_API_ENTRY PFNGLPUSHATTRIBPROC* glPushAttrib;
OPENGL_API_ENTRY PFNGLMAP1DPROC* glMap1d;
OPENGL_API_ENTRY PFNGLMAP1FPROC* glMap1f;
OPENGL_API_ENTRY PFNGLMAP2DPROC* glMap2d;
OPENGL_API_ENTRY PFNGLMAP2FPROC* glMap2f;
OPENGL_API_ENTRY PFNGLMAPGRID1DPROC* glMapGrid1d;
OPENGL_API_ENTRY PFNGLMAPGRID1FPROC* glMapGrid1f;
OPENGL_API_ENTRY PFNGLMAPGRID2DPROC* glMapGrid2d;
OPENGL_API_ENTRY PFNGLMAPGRID2FPROC* glMapGrid2f;
OPENGL_API_ENTRY PFNGLEVALCOORD1DPROC* glEvalCoord1d;
OPENGL_API_ENTRY PFNGLEVALCOORD1DVPROC* glEvalCoord1dv;
OPENGL_API_ENTRY PFNGLEVALCOORD1FPROC* glEvalCoord1f;
OPENGL_API_ENTRY PFNGLEVALCOORD1FVPROC* glEvalCoord1fv;
OPENGL_API_ENTRY PFNGLEVALCOORD2DPROC* glEvalCoord2d;
OPENGL_API_ENTRY PFNGLEVALCOORD2DVPROC* glEvalCoord2dv;
OPENGL_API_ENTRY PFNGLEVALCOORD2FPROC* glEvalCoord2f;
OPENGL_API_ENTRY PFNGLEVALCOORD2FVPROC* glEvalCoord2fv;
OPENGL_API_ENTRY PFNGLEVALMESH1PROC* glEvalMesh1;
OPENGL_API_ENTRY PFNGLEVALPOINT1PROC* glEvalPoint1;
OPENGL_API_ENTRY PFNGLEVALMESH2PROC* glEvalMesh2;
OPENGL_API_ENTRY PFNGLEVALPOINT2PROC* glEvalPoint2;
OPENGL_API_ENTRY PFNGLALPHAFUNCPROC* glAlphaFunc;
OPENGL_API_ENTRY PFNGLPIXELZOOMPROC* glPixelZoom;
OPENGL_API_ENTRY PFNGLPIXELTRANSFERFPROC* glPixelTransferf;
OPENGL_API_ENTRY PFNGLPIXELTRANSFERIPROC* glPixelTransferi;
OPENGL_API_ENTRY PFNGLPIXELMAPFVPROC* glPixelMapfv;
OPENGL_API_ENTRY PFNGLPIXELMAPUIVPROC* glPixelMapuiv;
OPENGL_API_ENTRY PFNGLPIXELMAPUSVPROC* glPixelMapusv;
OPENGL_API_ENTRY PFNGLCOPYPIXELSPROC* glCopyPixels;
OPENGL_API_ENTRY PFNGLDRAWPIXELSPROC* glDrawPixels;
OPENGL_API_ENTRY PFNGLGETCLIPPLANEPROC* glGetClipPlane;
OPENGL_API_ENTRY PFNGLGETLIGHTFVPROC* glGetLightfv;
OPENGL_API_ENTRY PFNGLGETLIGHTIVPROC* glGetLightiv;
OPENGL_API_ENTRY PFNGLGETMAPDVPROC* glGetMapdv;
OPENGL_API_ENTRY PFNGLGETMAPFVPROC* glGetMapfv;
OPENGL_API_ENTRY PFNGLGETMAPIVPROC* glGetMapiv;
OPENGL_API_ENTRY PFNGLGETMATERIALFVPROC* glGetMaterialfv;
OPENGL_API_ENTRY PFNGLGETMATERIALIVPROC* glGetMaterialiv;
OPENGL_API_ENTRY PFNGLGETPIXELMAPFVPROC* glGetPixelMapfv;
OPENGL_API_ENTRY PFNGLGETPIXELMAPUIVPROC* glGetPixelMapuiv;
OPENGL_API_ENTRY PFNGLGETPIXELMAPUSVPROC* glGetPixelMapusv;
OPENGL_API_ENTRY PFNGLGETPOLYGONSTIPPLEPROC* glGetPolygonStipple;
OPENGL_API_ENTRY PFNGLGETTEXENVFVPROC* glGetTexEnvfv;
OPENGL_API_ENTRY PFNGLGETTEXENVIVPROC* glGetTexEnviv;
OPENGL_API_ENTRY PFNGLGETTEXGENDVPROC* glGetTexGendv;
OPENGL_API_ENTRY PFNGLGETTEXGENFVPROC* glGetTexGenfv;
OPENGL_API_ENTRY PFNGLGETTEXGENIVPROC* glGetTexGeniv;
OPENGL_API_ENTRY PFNGLISLISTPROC* glIsList;
OPENGL_API_ENTRY PFNGLFRUSTUMPROC* glFrustum;
OPENGL_API_ENTRY PFNGLLOADIDENTITYPROC* glLoadIdentity;
OPENGL_API_ENTRY PFNGLLOADMATRIXFPROC* glLoadMatrixf;
OPENGL_API_ENTRY PFNGLLOADMATRIXDPROC* glLoadMatrixd;
OPENGL_API_ENTRY PFNGLMATRIXMODEPROC* glMatrixMode;
OPENGL_API_ENTRY PFNGLMULTMATRIXFPROC* glMultMatrixf;
OPENGL_API_ENTRY PFNGLMULTMATRIXDPROC* glMultMatrixd;
OPENGL_API_ENTRY PFNGLORTHOPROC* glOrtho;
OPENGL_API_ENTRY PFNGLPOPMATRIXPROC* glPopMatrix;
OPENGL_API_ENTRY PFNGLPUSHMATRIXPROC* glPushMatrix;
OPENGL_API_ENTRY PFNGLROTATEDPROC* glRotated;
OPENGL_API_ENTRY PFNGLROTATEFPROC* glRotatef;
OPENGL_API_ENTRY PFNGLSCALEDPROC* glScaled;
OPENGL_API_ENTRY PFNGLSCALEFPROC* glScalef;
OPENGL_API_ENTRY PFNGLTRANSLATEDPROC* glTranslated;
OPENGL_API_ENTRY PFNGLTRANSLATEFPROC* glTranslatef;

#endif     